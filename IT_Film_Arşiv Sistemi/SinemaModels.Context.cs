//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IT_Film_Arşiv_Sistemi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SinemaOtomasyon : DbContext
    {
        public SinemaOtomasyon()
            : base("name=SinemaOtomasyon")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminGiri> AdminGiris { get; set; }
        public virtual DbSet<BiletSatış> BiletSatış { get; set; }
        public virtual DbSet<Film> Films { get; set; }
        public virtual DbSet<FilmTürü> FilmTürü { get; set; }
        public virtual DbSet<KullanıcıGiris> KullanıcıGiris { get; set; }
        public virtual DbSet<Salon> Salons { get; set; }
        public virtual DbSet<Sean> Seans { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Ucret> Ucrets { get; set; }
        public virtual DbSet<Ülke> Ülke { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SpBiletSatısIptal(string koltukNo)
        {
            var koltukNoParameter = koltukNo != null ?
                new ObjectParameter("KoltukNo", koltukNo) :
                new ObjectParameter("KoltukNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBiletSatısIptal", koltukNoParameter);
        }
    
        public virtual int SpBiletSatısKaydet(Nullable<int> filmId, Nullable<int> salonId, Nullable<int> seansId, string koltukNo, Nullable<int> musteriId, Nullable<int> ucretId)
        {
            var filmIdParameter = filmId.HasValue ?
                new ObjectParameter("FilmId", filmId) :
                new ObjectParameter("FilmId", typeof(int));
    
            var salonIdParameter = salonId.HasValue ?
                new ObjectParameter("SalonId", salonId) :
                new ObjectParameter("SalonId", typeof(int));
    
            var seansIdParameter = seansId.HasValue ?
                new ObjectParameter("SeansId", seansId) :
                new ObjectParameter("SeansId", typeof(int));
    
            var koltukNoParameter = koltukNo != null ?
                new ObjectParameter("KoltukNo", koltukNo) :
                new ObjectParameter("KoltukNo", typeof(string));
    
            var musteriIdParameter = musteriId.HasValue ?
                new ObjectParameter("MusteriId", musteriId) :
                new ObjectParameter("MusteriId", typeof(int));
    
            var ucretIdParameter = ucretId.HasValue ?
                new ObjectParameter("UcretId", ucretId) :
                new ObjectParameter("UcretId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBiletSatısKaydet", filmIdParameter, salonIdParameter, seansIdParameter, koltukNoParameter, musteriIdParameter, ucretIdParameter);
        }
    
        public virtual ObjectResult<SpBiletSatısListele_Result> SpBiletSatısListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpBiletSatısListele_Result>("SpBiletSatısListele");
        }
    
        public virtual int SpFilmGüncelle(Nullable<int> id, string filmad, string yonetmen, Nullable<int> filmTurId, string filmsuresi, Nullable<int> ulkeId, Nullable<System.DateTime> vizyonTarih)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var filmadParameter = filmad != null ?
                new ObjectParameter("Filmad", filmad) :
                new ObjectParameter("Filmad", typeof(string));
    
            var yonetmenParameter = yonetmen != null ?
                new ObjectParameter("Yonetmen", yonetmen) :
                new ObjectParameter("Yonetmen", typeof(string));
    
            var filmTurIdParameter = filmTurId.HasValue ?
                new ObjectParameter("FilmTurId", filmTurId) :
                new ObjectParameter("FilmTurId", typeof(int));
    
            var filmsuresiParameter = filmsuresi != null ?
                new ObjectParameter("Filmsuresi", filmsuresi) :
                new ObjectParameter("Filmsuresi", typeof(string));
    
            var ulkeIdParameter = ulkeId.HasValue ?
                new ObjectParameter("UlkeId", ulkeId) :
                new ObjectParameter("UlkeId", typeof(int));
    
            var vizyonTarihParameter = vizyonTarih.HasValue ?
                new ObjectParameter("VizyonTarih", vizyonTarih) :
                new ObjectParameter("VizyonTarih", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpFilmGüncelle", idParameter, filmadParameter, yonetmenParameter, filmTurIdParameter, filmsuresiParameter, ulkeIdParameter, vizyonTarihParameter);
        }
    
        public virtual int SpFilmKaydet(string filmad, string yonetmen, Nullable<int> filmTurId, string filmsuresi, Nullable<int> ulkeId, Nullable<System.DateTime> vizyonTarih)
        {
            var filmadParameter = filmad != null ?
                new ObjectParameter("Filmad", filmad) :
                new ObjectParameter("Filmad", typeof(string));
    
            var yonetmenParameter = yonetmen != null ?
                new ObjectParameter("Yonetmen", yonetmen) :
                new ObjectParameter("Yonetmen", typeof(string));
    
            var filmTurIdParameter = filmTurId.HasValue ?
                new ObjectParameter("FilmTurId", filmTurId) :
                new ObjectParameter("FilmTurId", typeof(int));
    
            var filmsuresiParameter = filmsuresi != null ?
                new ObjectParameter("Filmsuresi", filmsuresi) :
                new ObjectParameter("Filmsuresi", typeof(string));
    
            var ulkeIdParameter = ulkeId.HasValue ?
                new ObjectParameter("UlkeId", ulkeId) :
                new ObjectParameter("UlkeId", typeof(int));
    
            var vizyonTarihParameter = vizyonTarih.HasValue ?
                new ObjectParameter("VizyonTarih", vizyonTarih) :
                new ObjectParameter("VizyonTarih", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpFilmKaydet", filmadParameter, yonetmenParameter, filmTurIdParameter, filmsuresiParameter, ulkeIdParameter, vizyonTarihParameter);
        }
    
        public virtual ObjectResult<SpFilmListele_Result> SpFilmListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFilmListele_Result>("SpFilmListele");
        }
    
        public virtual int SpFilmSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpFilmSil", idParameter);
        }
    }
}
